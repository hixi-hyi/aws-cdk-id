"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const rank_1 = require("./rank");
class Identifier {
    constructor(r) {
        this.childs = new Array();
        this.rank = new rank_1.Rank(r);
    }
    child(value) {
        const id = this.copy();
        if (typeof value === 'string') {
            id.childs.push(value);
            return id;
        }
        else {
            if (id.childs.length !== 0) {
                throw new Error(`Error: It is forbidden to call 'child(IRank)' functions, after 'child(string)`);
            }
            id.rank = id.rank.copy(value);
            return id;
        }
    }
    copy() {
        const id = new Identifier(this.rank);
        id.childs = Array.from(this.childs);
        return id;
    }
    scope(callback) {
        callback(this.copy());
    }
    get stackId() {
        return this.rank.capitalizeString();
    }
    get constructId() {
        const length = this.childs.length;
        if (length === 0) {
            throw new Error(`Error: Does not have any child. Please call 'child(string)'`);
        }
        const word = this.childs[length - 1];
        return word.charAt(0).toUpperCase() + word.slice(1);
    }
    exportName(s) {
        if (this.childs.length === 0) {
            return this.stackId + ':' + s;
        }
        return this.stackId + ':' + this.childs.reduce((acc, word) => acc + word.charAt(0).toUpperCase() + word.slice(1), '') + ':' + s;
    }
    get id() {
        return this.stackId + this.childs.reduce((acc, word) => acc + word.charAt(0).toUpperCase() + word.slice(1), '');
    }
}
exports.Identifier = Identifier;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWRlbnRpZmllci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9pZGVudGlmaWVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaUNBQXFDO0FBRXJDLE1BQWEsVUFBVTtJQUdyQixZQUFZLENBQVE7UUFGYixXQUFNLEdBQWEsSUFBSSxLQUFLLEVBQUUsQ0FBQztRQUdwQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksV0FBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFFTSxLQUFLLENBQUMsS0FBcUI7UUFDaEMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3ZCLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO1lBQzdCLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3RCLE9BQU8sRUFBRSxDQUFDO1NBQ1g7YUFBTTtZQUNMLElBQUksRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUMxQixNQUFNLElBQUksS0FBSyxDQUFDLCtFQUErRSxDQUFDLENBQUM7YUFDbEc7WUFDRCxFQUFFLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzlCLE9BQU8sRUFBRSxDQUFDO1NBQ1g7SUFDSCxDQUFDO0lBRU0sSUFBSTtRQUNULE1BQU0sRUFBRSxHQUFHLElBQUksVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxFQUFFLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sRUFBRSxDQUFDO0lBQ1osQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFrQztRQUM3QyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUVELElBQVcsT0FBTztRQUNoQixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBRUQsSUFBVyxXQUFXO1FBQ3BCLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO1FBQ2xDLElBQUksTUFBTSxLQUFLLENBQUMsRUFBRTtZQUNoQixNQUFNLElBQUksS0FBSyxDQUFDLDZEQUE2RCxDQUFDLENBQUM7U0FDaEY7UUFDRCxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBQyxDQUFDLENBQUMsQ0FBQztRQUNuQyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRU0sVUFBVSxDQUFDLENBQVM7UUFDekIsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDNUIsT0FBTyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUM7U0FDL0I7UUFDRCxPQUFPLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0lBQ2xJLENBQUM7SUFFRCxJQUFXLEVBQUU7UUFDWCxPQUFPLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ2xILENBQUM7Q0FFRjtBQXZERCxnQ0F1REMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJUmFuaywgUmFuayB9IGZyb20gJy4vcmFuayc7XG5cbmV4cG9ydCBjbGFzcyBJZGVudGlmaWVyIHtcbiAgcHVibGljIGNoaWxkczogc3RyaW5nW10gPSBuZXcgQXJyYXkoKTtcbiAgcHVibGljIHJhbms6IFJhbms7XG4gIGNvbnN0cnVjdG9yKHI6IElSYW5rKSB7XG4gICAgdGhpcy5yYW5rID0gbmV3IFJhbmsocik7XG4gIH1cblxuICBwdWJsaWMgY2hpbGQodmFsdWU6IHN0cmluZyB8IElSYW5rKTogSWRlbnRpZmllciB7XG4gICAgY29uc3QgaWQgPSB0aGlzLmNvcHkoKTtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgaWQuY2hpbGRzLnB1c2godmFsdWUpO1xuICAgICAgcmV0dXJuIGlkO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoaWQuY2hpbGRzLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEVycm9yOiBJdCBpcyBmb3JiaWRkZW4gdG8gY2FsbCAnY2hpbGQoSVJhbmspJyBmdW5jdGlvbnMsIGFmdGVyICdjaGlsZChzdHJpbmcpYCk7XG4gICAgICB9XG4gICAgICBpZC5yYW5rID0gaWQucmFuay5jb3B5KHZhbHVlKTtcbiAgICAgIHJldHVybiBpZDtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgY29weSgpOiBJZGVudGlmaWVyIHtcbiAgICBjb25zdCBpZCA9IG5ldyBJZGVudGlmaWVyKHRoaXMucmFuayk7XG4gICAgaWQuY2hpbGRzID0gQXJyYXkuZnJvbSh0aGlzLmNoaWxkcyk7XG4gICAgcmV0dXJuIGlkO1xuICB9XG5cbiAgcHVibGljIHNjb3BlKGNhbGxiYWNrOiAoaWQ6IElkZW50aWZpZXIpID0+IHZvaWQpIHtcbiAgICBjYWxsYmFjayh0aGlzLmNvcHkoKSk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IHN0YWNrSWQoKTogc3RyaW5ne1xuICAgIHJldHVybiB0aGlzLnJhbmsuY2FwaXRhbGl6ZVN0cmluZygpO1xuICB9XG5cbiAgcHVibGljIGdldCBjb25zdHJ1Y3RJZCgpOiBzdHJpbmd7XG4gICAgY29uc3QgbGVuZ3RoID0gdGhpcy5jaGlsZHMubGVuZ3RoO1xuICAgIGlmIChsZW5ndGggPT09IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRXJyb3I6IERvZXMgbm90IGhhdmUgYW55IGNoaWxkLiBQbGVhc2UgY2FsbCAnY2hpbGQoc3RyaW5nKSdgKTtcbiAgICB9XG4gICAgY29uc3Qgd29yZCA9IHRoaXMuY2hpbGRzW2xlbmd0aC0xXTtcbiAgICByZXR1cm4gd29yZC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHdvcmQuc2xpY2UoMSk7XG4gIH1cblxuICBwdWJsaWMgZXhwb3J0TmFtZShzOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGlmICh0aGlzLmNoaWxkcy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiB0aGlzLnN0YWNrSWQgKyAnOicgKyBzO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5zdGFja0lkICsgJzonICsgdGhpcy5jaGlsZHMucmVkdWNlKChhY2MsIHdvcmQpID0+IGFjYyArIHdvcmQuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB3b3JkLnNsaWNlKDEpLCAnJykgKyAnOicgKyBzO1xuICB9XG5cbiAgcHVibGljIGdldCBpZCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLnN0YWNrSWQgKyB0aGlzLmNoaWxkcy5yZWR1Y2UoKGFjYywgd29yZCkgPT4gYWNjICsgd29yZC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHdvcmQuc2xpY2UoMSksICcnKTtcbiAgfVxuXG59XG4iXX0=